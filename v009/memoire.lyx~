#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Ordonnancement des workflows scientifiques sur le cloud avec optimisation
 de l'énergie
\end_layout

\begin_layout Date
March 20
\begin_inset Formula $^{th}$
\end_inset

, 2023
\end_layout

\begin_layout Author
CHERIEF Houcine Abdelkader
\end_layout

\begin_layout Author
TOUHAMI Abdelghani Chaabane
\end_layout

\begin_layout Standard

\color brown
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Abstract

\color brown
ToDo
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section

\color brown
General introduction
\end_layout

\begin_layout Subsection

\color brown
Context
\end_layout

\begin_layout Subsection

\color brown
Problematic
\end_layout

\begin_layout Standard
The energy consumption of cloud data centers is animportant challenge.
 Energy consumption is increasing day by day due to a non-energyaware strategy
 in resource management.
 About 0.5% of energy consumption inworldwide is related to cloud data centers,
 while this is envisaged to fourfold in 2020.
\begin_inset CommandInset citation
LatexCommand cite
key "cloud_computing_simulators"
literal "false"

\end_inset


\end_layout

\begin_layout Subsection

\color brown
Objectives
\end_layout

\begin_layout Subsection

\color brown
Contribution
\end_layout

\begin_layout Subsection

\color brown
Outline
\end_layout

\begin_layout Standard

\color brown
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Workflow and scientific workflow
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Standard
Workflows are a systematic way of describing and executing a series of computati
onal or data manipulation steps, or tasks, in a specific application domain.
 Workflow technology is established in the business domain for several years.
 This fact suggests the need for detailed investigations in the qualification
 of conventional workflow technology for the evolving application domain
 of e-Science.
\begin_inset CommandInset citation
LatexCommand cite
key "lifecycle"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
Scientific workflows are a specialized form of workflows that are designed
 for data-intensive or knowledge discovery applications in various scientific
 disciplines.
 Scientific workflows enable researchers to formulate, share, reuse, and
 validate complex methods that involve multiple data sources and computational
 platforms.
 (TODO ChatGPT)
\end_layout

\begin_layout Standard
There are many scientific applications in various fields, such as astronomy
 and biology that contain a large amount of data and involve a large number
 of tasks.
 These applications are represented by a workflow that represents a set
 of data processing steps.
\begin_inset CommandInset citation
LatexCommand cite
key "5"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
In this chapter, we present the workflow and Workflow Management System
 (WMS) with its architecture.We will also talk about the scientific workflows,
 its life cycle and its types.
\end_layout

\begin_layout Subsection
Workflow definition
\end_layout

\begin_layout Standard
Workflow is defined by Workflow Management Coalition (WfMC), which is a
 consortium formed to define standards for the interoperability of workflow
 management systems, as following:
\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

Workflow is the sequence of tasks, steps, and decisions that need to be
 followed to complete a specific process.
 It can be thought of as a set of instructions that describe how a process
 should be performed, including the order in which tasks are to be completed,
 who is responsible for performing each task, and what should happen next
 based on the outcome of each task.
 
\end_layout

\begin_layout Standard
Workflows can be used to automate a wide range of business processes, such
 as invoicing, order fulfillment, human resources, and project management.
 The goal of a workflow is to make sure that tasks are completed in the
 correct order and by the right people, and to ensure that the process is
 efficient and accurate.
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "WfMC_glossary"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
The execution of a workflow is managed by a Workflow Management System (WMS).
\end_layout

\begin_layout Subsection
Scientific workflow
\end_layout

\begin_layout Subsubsection
Definition
\end_layout

\begin_layout Standard
Scientific workflows are data-intensive applications representing distributed
 data sources and complex computations in various domains, i.e.
 astronomy, engineering sciences, and bioinformatics.
 In distributed environments like fog computing, various sensors and experimenta
l processes generate a large volume of data that need collection and processing
 within specific time constraints.
\begin_inset CommandInset citation
LatexCommand cite
key "5"
literal "false"

\end_inset


\end_layout

\begin_layout Subsubsection
Scientific workflow's life cycle
\begin_inset CommandInset citation
LatexCommand cite
key "lifecycle"
literal "false"

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/scientific_workflow_lifecycle.png

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Scientific and Business workflow's life cycle 
\begin_inset CommandInset citation
LatexCommand cite
key "lifecycle"
literal "false"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The life cycle for scientific workflows heavily distinguishes from other
 workflow types.
 The life cycle is inferred from observations about theway scientists create
 and conduct experiments and from known properties ofscientific simulations
 and computations.
\end_layout

\begin_layout Standard
Typically, there is only one user group, the scientists, playing the roles
 of a modeler, user, administrator,and analyst.
 The focus of their work is usually on single workflow instances.
\end_layout

\begin_layout Standard
To be precise, scientists do not distinguish between workflow models and
 instances or are not aware of a difference between models and instances,
 respectively.
 They setup a simulation and execute it once at a time.
 Because scientists typically develop their workflow in a trial-and-error
 manner, modeling and execution phases are not arranged in a strict sequence.
\end_layout

\begin_layout Standard
In fact, they can be carried out alternated.
 An additional cycle therefore leads from execution back to modeling phase
 with the helpof a “suspend” operation on the workflow instance, which remains
 hidden fromthe scientists.
 Technical details are transparent for scientists altogether.
\end_layout

\begin_layout Standard
For instance, conventional workflow adaptation is experienced as scientific
 workflow modeling; the deployment (of parts of a workflow) is part of the
 “run/resume” operation , which is also hidden for the scientist.
 Workflow execution starts immediately after modeling.
 
\end_layout

\begin_layout Standard
The traditional execution and monitoring phases aremerged into a single
 phase in the scien tific workflow life cycle because from ascientist’s
 point of view monitoring only visualizes a running workflow (instance).
\end_layout

\begin_layout Standard
After execution a scientist can analyze the computed results and may remodel
 and reexecute the workflow possibly with different parameters.
 
\end_layout

\begin_layout Subsubsection
Benefits of workflow for the science
\end_layout

\begin_layout Standard
Workflows in science provide multiple benefits
\begin_inset CommandInset citation
LatexCommand cite
key "lifecycle"
literal "false"

\end_inset

:
\end_layout

\begin_layout Itemize
they contribute to sharing knowledge by being available as services for
 collaborating scientists with the help of workflows a community-based analysis
 of results is supported.
\end_layout

\begin_layout Itemize
workflows are able to deal with huge amounts of data, e.g.
 collected by sensors or calculated by scientific algorithms.
\end_layout

\begin_layout Itemize
workflows are capable of running in distributed and highly heterogeneous
 environments—a common scenario in scientific computations where a great
 variety of platforms and programming languages is usually employed.
\end_layout

\begin_layout Itemize
the automation of steps during workflow design and execution allows scientists
 to concentrate on solving their main scientific problems.
\end_layout

\begin_layout Itemize
workflows can be utilized to conduct scientific simulations in a parallel
 and automated manner.
\end_layout

\begin_layout Subsubsection
Differences between business and scientific workflows
\end_layout

\begin_layout Standard
There are many differences between business and scientific workflows
\begin_inset CommandInset citation
LatexCommand cite
key "defference_between_business_scientific_workflows"
literal "false"

\end_inset

, we listed some of them:
\end_layout

\begin_layout Itemize
Business workflows aim at automating organizational processes that are mainly
 executed by humans, while scientific workflows aim at validating hypotheses
 of a researcher based on available data.
\end_layout

\begin_layout Itemize
Business workflows have a predetermined goal, while scientific workflows
 have experimental and exploratory goals that vary more frequently.
\end_layout

\begin_layout Itemize
Business workflows are executed under human control, while scientific workflows
 are executed fully automatically by a computer.
\end_layout

\begin_layout Itemize
Business workflows depend on certain resources including application programs,
 while scientific workflows depend more strongly on proper parameter settings
\end_layout

\begin_layout Subsection
Workflow Management System
\end_layout

\begin_layout Subsubsection
Definition
\end_layout

\begin_layout Standard
Every workflow is executed on a workflow management system (WMS).
\begin_inset CommandInset citation
LatexCommand cite
key "lifecycle"
literal "false"

\end_inset

 which was defined by WfMC 
\begin_inset CommandInset citation
LatexCommand cite
key "WfMC_glossary"
literal "false"

\end_inset

 as following:
\end_layout

\begin_layout Standard
A software application that is designed to help organizations automate and
 manage their business processes.
 A WMS allows an organization to define and implement a workflow – a series
 of tasks, steps, and decisions – that need to be followed to complete a
 specific process.
 The system can then be used to track the progress of the workflow, manage
 the flow of information and documents, and ensure that tasks are completed
 in the correct order and by the right people.
\end_layout

\begin_layout Standard
A WMS can be used to automate a wide range of business processes, such as
 invoicing, order fulfillment, human resources, and project management.
 It can also be used to integrate different systems, such as email, calendar,
 and customer relationship management (CRM) software.
 WMS allows you to streamline the process and make it more efficient, reduce
 errors and delays, and give you real-time visibility into the status of
 your processes, also it’s common to have a built-in reporting and analytics
 tools to measure the performance of the process.
\end_layout

\begin_layout Subsubsection
Workflow engine architecture
\end_layout

\begin_layout Standard
workflows are compositions of tasks (also referred to as activities) by
 means of causal or data dependencies that are carried out on a computer.
 They are executed on a workflow management system (WMS).
 A workflow that utilizes Web services (WSs) as implementations of tasks
 is usually called service composition.
 Web services are the most prominent implementation of the serviceoriented
 architecture (SOA).
 The Web Service technology is an approach to provide and request services
 in distributed environments independent of programming languages, platforms,
 and operating systems.
 It is applied in a very wide range of applications where integration of
 heterogeneous systems is a must.
\begin_inset CommandInset citation
LatexCommand cite
key "lifecycle"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
The WfMC have published an architectural Reference Model WfRM which is a
 framework that provides a common understanding of the concepts and components
 that are involved in the design, execution, and management of workflows
\begin_inset CommandInset citation
LatexCommand cite
key "WfMC_glossary"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/WMS_architecture.png

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Workflow engine architecture
\begin_inset CommandInset citation
LatexCommand cite
key "WfMC_glossary"
literal "false"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
There are 5 interfaces
\begin_inset CommandInset citation
LatexCommand cite
key "WMS_interfaces"
literal "false"

\end_inset

 which are:
\end_layout

\begin_layout Paragraph
Interface 1 Web Service (process definition tools)
\end_layout

\begin_layout Standard
The 1st interface service provides the link between the tools designed for
 creating and modifying workflow definitions and the workflow enactment
 service.
 It controls the system connection.
 In addition, it inquiries the workflow for process definitions and resource
 classifications.
 
\end_layout

\begin_layout Paragraph
Interface 2 (workflow client applications) 
\end_layout

\begin_layout Standard
Through the 2nd interface service, users have access to a work list handler
 service and enactment services.
 In addition, the service produces states of cases and work items.
 The states are also controlled through this service (i.e.
 start, interruption, hang-up, executing, etc).
\end_layout

\begin_layout Paragraph
Interface 3 (invoked applications)
\end_layout

\begin_layout Standard
When some tasks of a process need to invoke an application outside of the
 workflow engine, they directly activate the workflow enactment service
 through the 3rd interface service and open interactive applications the
 current work item of the work list handler.
\end_layout

\begin_layout Paragraph
Interface 4 (other workflow enactment services)
\end_layout

\begin_layout Standard
The interoperability and communication between workflows become the bottleneck
 to solve with the recommendations and standards of WfMC.
 The 4th interface service handles the basic operations to exchange between
 autonomous workflow systems.
 Through this interface, workflows transfer cases, resources and work items.
\end_layout

\begin_layout Paragraph
Interface 5 (administration and monitoring tools)
\end_layout

\begin_layout Standard
The 5th interface manages the administration and the monitoring tools of
 the workflow system.
 Through this service, the executing process should be managed, well-supervised
 and the events should be recorded in log files.
\end_layout

\begin_layout Subsubsection
Main Requirements on Scientific Workflow Management Systems
\end_layout

\begin_layout Standard
Workflows in the scientific area make use of a data-centric approach.
 Typically, huge amounts of data have to be processed, e.g.
 5 GB data per day is transmitted by the Hubble telescope, and probably
 need to be processed by a workflow, this is why modeling language for scientifi
c workflows is primarily data-driven.
 That means, for accommodating the scientists’ needs the main focus of the
 modeling language should be on data flow while the control flow is considered
 secondary.
\begin_inset CommandInset citation
LatexCommand cite
key "lifecycle"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
There are many requirements listed in 
\begin_inset CommandInset citation
LatexCommand cite
key "lifecycle"
literal "false"

\end_inset

:
\end_layout

\begin_layout Itemize

\series bold
usability
\series default
: since the majority of users of sWfMSs are no computer scientists.
 A scientist needs the support of easy-to-use tools, automation as far as
 possible and maximal flexibility in the usage of the sWfMS.This means that
 scientists want to:
\end_layout

\begin_deeper
\begin_layout Enumerate
model their workflows in a convenient way.
\end_layout

\begin_layout Enumerate
run their workflows and store their data on resources that are specified
 by the user himself or automatically chosen by the sWfMS.
\end_layout

\begin_layout Enumerate
same support for services used in traditional workflows.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
flexible:
\series default
 it mean the ability of a system to react to changes in its environment.
 Approaches to flexibility of workflows can be divided into two groups:
 
\end_layout

\begin_deeper
\begin_layout Enumerate
workflow can be modified according to the changed situation (known as adaptation
).
 Such modifications can address different workflow dimensions (logical,
 functional, organizational dimension) and may be applied to workflow models
 or single workflow instances.
 
\end_layout

\begin_layout Enumerate
workflow can be modeled in a way that avoids its modification even in the
 presence of a changing environment (known as avoid change).
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
monitoring: 
\series default
WMS should support the ability to monitor the status of the workflow execution.
 For example, the scientist is interested in knowledge about running, finished
 or faulted activities, allocated resources, and the dynamical choice of
 a service implementation.
 Inspecting the produced data is also a need.
\end_layout

\begin_layout Itemize

\series bold
reproducibility:
\series default
 is of utmost importance for different reasons.
 Scientists who are not involved in the execution of the workflow need to
 be able to retrace the simulation, have to review the findings, or need
 to use the results.
 The operating scientist may want to repeat a workflow or parts of it to
 draw conclusions, and to prove statements and assumptions.
 Additionally, the scientist may share the results with people he collaborates
 with.
 While following and reproducing workflow runs and their (intermediate)
 results scientists use provenance information.
 Finally, provenance information should be displayed in a way that (non-computer
) scientists understand the execution of workflows including the derivation
 of data.
\end_layout

\begin_layout Itemize

\series bold
robustness: 
\series default
it is an important issue since scientific workflows are long-running.
 The term robustness denotes the ability of being error- resistant.
 The needed flexibility mechanisms mentioned above are a way to improve
 the robustness of a system.
 But additional approaches are needed to protect the execution progress
 from being lost in case of unforeseeable failures, to reach a consistent
 system state even in the presence of failures, and to proceed a simulation/expe
riment after a failure.
\end_layout

\begin_layout Itemize

\series bold
scalability:
\series default
 scientific workflows should scale with the number of users, number of utilized
 services, data or calculation resources and involved participants.
 Today, typical scientific workflows are mostly executed in a central manner
 on a single machine.
 A decentralized workflow enactment can help to scale via distributed process
 execution.
 It can be achieved, for example, by parallel execution in distributed and
 heterogeneous execution environments using provisioning techniques.
\end_layout

\begin_layout Itemize

\series bold
specific requirements:
\series default
 there are specific requirements for each specific scientific domain, e.g.
 medical science, chemistry or mechanical engineering.
 Specific domain related requirements and the fact that it is hard to cover
 all scientific domains in one WMS create the need to extends WMSs and the
 workflow models and possibly adapt these models and their instances.
 This includes, for example, domain specific services, result displays or
 meta-models for semantic annotations.
\end_layout

\begin_layout Subsection
Conclusion
\end_layout

\begin_layout Standard
In this chapter we have presented workflows, and specially about scientific
 workflows, their lifecycle, their benifits and the differences between
 them and business workflows.We have also presented workflow management system
 (WMS) and it its architecture explained how the foreseen system meets general
 requirements of scientists and scientific workflows.
\end_layout

\begin_layout Standard
In the next chapter we will present the cloud computing on which scientific
 workflows can be executed, since they require a scalable and costless infrastru
cture.
\end_layout

\begin_layout Standard

\color brown
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
The Cloud Computing
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Standard
Nowadays, cloud computing is an emerging technology due to virtualization
 and providing low price services on pay-as per-use basis and it is the
 most popular computing system paradigm in the academic research and industry,
 and it provides cloud services on-demand anywhere and anytime
\begin_inset CommandInset citation
LatexCommand cite
key "cloud_computing_simulators"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
In the previous chapter, we have introduced the workflow technology.
 However the execution scientific workflows needs a huge amounts of data
 or allocate enormous computing resources and a big scalability, this is
 why we will present in this chapter the most convivial execution infrastructure
 which is the cloud computing model.
\end_layout

\begin_layout Subsection
Definition of Cloud Computing
\end_layout

\begin_layout Standard
The modern literature provides several definitions of Cloud Computing.
 Some definitions of Cloud Computing refer to services provided by data
 centre, while others define it as a service provided by the Internet.Still,
 the most quoted definition of Cloud Computing is the NIST definition.
\end_layout

\begin_layout Standard
The National Institute of Standards and Technology (NIST) which is an agency
 of the United States Department of Commerce whose mission is to promote
 American innovation and industrial competitiveness, define the cloud computing
 as following : 
\begin_inset Quotes eld
\end_inset

Cloud computing is a model for enabling ubiquitous, convenient, on-demand
 network access to a shared pool of configurable computing resources (e.g.,
 networks, servers, storage, applications, and services) that can be rapidly
 provisioned and released with minimal management effort or service provider
 interaction.
\begin_inset Quotes erd
\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "NIST_definition"
literal "false"

\end_inset


\end_layout

\begin_layout Subsection
Characteristics of Cloud Computing
\end_layout

\begin_layout Standard
The National Institute of Standards and Technology's definition
\begin_inset CommandInset citation
LatexCommand cite
key "NIST_definition"
literal "false"

\end_inset

 of cloud computing identifies "five essential characteristics":
\end_layout

\begin_layout Paragraph
On-demand self-service
\end_layout

\begin_layout Standard
Consumers of cloud computing services, such as server time and network storage,
 as needed automatically nearly instant access to resources.
 To support this expectation, clouds must allow self-service access so that
 customers can request, customize, pay, and use services without intervention
 of human operators.
\end_layout

\begin_layout Paragraph
Broad network access
\end_layout

\begin_layout Standard
Capabilities are available over the network and accessed through standard
 mechanisms that promote use by heterogeneous thin or thick client platforms
 (e.g., mobile phones, tablets, laptops, and workstations).
\end_layout

\begin_layout Paragraph
Resource pooling
\end_layout

\begin_layout Standard
The provider’s computing resources are pooled to serve multiple consumers
 using a multi-tenant model, with different physical and virtual resources
 dynamically assigned and reassigned according to consumer demand.
 There is a sense of location independence in that the customer generally
 has no control or knowledge over the exact location of the provided resources
 but may be able to specify location at a higher level of abstraction (e.g.,
 country, state, or datacenter).
 Examples of resources include storage, processing, memory, and network
 bandwidth.
\end_layout

\begin_layout Paragraph
Rapid elasticity
\end_layout

\begin_layout Standard
Cloud computing gives the illusion of unlimited computing resources available
 on demand in any quantity at any time.
 Therefore, users expect clouds to rapidly provide resources in any quantity
 at any time.
 In particular, it is expected that the additional resources can be (a)
 provisioned, possibly automatically, when an application load increases
 and (b) released when load decreases (scale up and down).
\end_layout

\begin_layout Paragraph
Measured service
\end_layout

\begin_layout Standard
Services must be priced on a shortterm basis (e.g., by the hour), allowing
 users to release (and not pay for) resources as soon as they are not needed.
 For these reasons, clouds must implement features to allow efficient trading
 of service such as pricing, accounting, and billing.
 
\end_layout

\begin_layout Standard
Cloud systems automatically control and optimize resource use by leveraging
 a metering capability at some level of abstraction appropriate to the type
 of service (e.g., storage, processing, bandwidth, and active user accounts).
 Resource usage can be monitored, controlled, and reported, providing transparen
cy for both the provider and consumer of the utilized service.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Cloud computing has a lot of another characteristics
\begin_inset CommandInset citation
LatexCommand cite
key "DIGITAL_NOTES_ON_CLOUD"
literal "false"

\end_inset

: 
\end_layout

\begin_layout Enumerate
Performances are being monitored by IT experts from the service provider
 end.
 
\end_layout

\begin_layout Enumerate
Resources are abstracted or virtualized.
 
\end_layout

\begin_layout Enumerate
Availability improves with the use of multiple redundant sites
\end_layout

\begin_layout Enumerate
Customizable: resources rented from the cloud must be highly customizable.
\end_layout

\begin_layout Enumerate
Device and location independence, which means no maintenance, required.
 
\end_layout

\begin_layout Subsection
Service Models
\end_layout

\begin_layout Standard
The National Institute of Standards and Technology (NIST) has define 3 services
 models in their definition
\begin_inset CommandInset citation
LatexCommand cite
key "NIST_definition"
literal "false"

\end_inset

, which are
\end_layout

\begin_layout Subsubsection
Software as a Service (SaaS)
\end_layout

\begin_layout Standard
The capability provided to the consumer is to use the provider’s applications
 running on a cloud infrastructure2 .
 The applications are accessible from various client devices through either
 a thin client interface, such as a web browser (e.g., web-based email), or
 a program interface.
 The consumer does not manage or control the underlying cloud infrastructure
 including network, servers, operating systems, storage, or even individual
 application capabilities, with the possible exception of limited userspecific
 application configuration settings.
\end_layout

\begin_layout Subsubsection
Platform as a Service (PaaS)
\end_layout

\begin_layout Standard
The capability provided to the consumer is to deploy onto the cloud infrastructu
re consumer-created or acquired applications created using programming languages
, libraries, services, and tools supported by the provider.3 The consumer
 does not manage or control the underlying cloud infrastructure including
 network, servers, operating systems, or storage, but has control over the
 deployed applications and possibly configuration settings for the application-h
osting environment.
\end_layout

\begin_layout Subsubsection
Infrastructure as a Service (IaaS)
\end_layout

\begin_layout Standard
The capability provided to the consumer is to provision processing, storage,
 networks, and other fundamental computing resources where the consumer
 is able to deploy and run arbitrary software, which can include operating
 systems and applications.
 The consumer does not manage or control the underlying cloud infrastructure
 but has control over operating systems, storage, and deployed applications;
 and possibly limited control of select networking components (e.g., host
 firewalls).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/cloud_services_model_graph-1024x465.jpg
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Cloud service models
\color brown
 from https://www.quisted.net/index.php/2018/08/30/dc-cloud-computing
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Deployment Models
\end_layout

\begin_layout Standard
There are 5 deployment models of Cloud Computing, the first 4 was listed
 by The NIST definition 
\begin_inset CommandInset citation
LatexCommand cite
key "NIST_definition"
literal "false"

\end_inset

 and 
\begin_inset CommandInset citation
LatexCommand cite
key "vmware"
literal "false"

\end_inset

 has define the last one 
\end_layout

\begin_layout Paragraph
Private cloud
\end_layout

\begin_layout Standard
The cloud infrastructure is provisioned for exclusive use by a single organizati
on comprising multiple consumers (e.g., business units).
 It may be owned, managed, and operated by the organization, a third party,
 or some combination of them, and it may exist on or off premises.
\end_layout

\begin_layout Paragraph
Community cloud
\end_layout

\begin_layout Standard
The cloud infrastructure is provisioned for exclusive use by a specific
 community of consumers from organizations that have shared concerns (e.g.,
 mission, security requirements, policy, and compliance considerations).
 It may be owned, managed, and operated by one or more of the organizations
 in the community, a third party, or some combination of them, and it may
 exist on or off premises.
\end_layout

\begin_layout Paragraph
Public cloud
\end_layout

\begin_layout Standard
The cloud infrastructure is provisioned for open use by the general public.
 It may be owned, managed, and operated by a business, academic, or government
 organization, or some combination of them.
 It exists on the premises of the cloud provider.
\end_layout

\begin_layout Paragraph
Hybrid cloud
\end_layout

\begin_layout Standard
The cloud infrastructure is a composition of two or more distinct cloud
 infrastructures (private, community, or public) that remain unique entities,
 but are bound together by standardized or proprietary technology that enables
 data and application portability (e.g., cloud bursting for load balancing
 between clouds).
 
\end_layout

\begin_layout Paragraph
Multi-Cloud Computing
\end_layout

\begin_layout Standard
Multi-Cloud = Any Combination of Native Public Clouds and Private Clouds
\end_layout

\begin_layout Standard
Some companies can’t use a single public cloud.
 Their developers may like Google Cloud, while IT operates in Azure both
 on-premise and in the cloud.
 Meanwhile, a startup they just acquired runs their killer app in Amazon
 Web Services (AWS).
\end_layout

\begin_layout Standard
This is the multi-cloud model.
 It’s the ultimate in flexibility to choose the cloud that best fits the
 application or business need.
 It’s no wonder organizations overwhelming go the multi-cloud route, often
 with the inclusion of hybrid cloud.
\end_layout

\begin_layout Standard
The main advantage of this model comparing to the public model is avoiding
 
\series bold
vendor lock
\series default
-in which will be defined later.
\end_layout

\begin_layout Subsection
Benefits of cloud computing
\end_layout

\begin_layout Standard
Cloud Computing are fueled in part by its perceived benefits
\color brown

\begin_inset CommandInset citation
LatexCommand cite
key "3"
literal "false"

\end_inset


\color inherit

\begin_inset CommandInset citation
LatexCommand cite
key "DIGITAL_NOTES_ON_CLOUD"
literal "false"

\end_inset

.
 The ideal Cloud Computing infrastructure would possess the following desirable
 characteristics: 
\end_layout

\begin_layout Itemize

\series bold
Reliability
\series default
: Backup and recovery of data are less expensive and extremely fast for
 business continuity.
\end_layout

\begin_layout Itemize

\series bold
Scalability
\series default
: We can increase or decrease the requirement of resources according to
 the business requirements.
 
\end_layout

\begin_layout Itemize

\series bold
Cost
\series default
: Cloud Computing requires significantly lesser capital expenditures to
 get up and running, it reduces the huge capital costs of buying hardware
 and software.
 
\end_layout

\begin_layout Itemize

\series bold
Speed
\series default
: resources can be accessed in minutes, typically within a few clicks ,no
 more waiting months or years and spending millions of dollars before anyone
 gets to log into your new solution.
\end_layout

\begin_layout Itemize

\series bold
Productivity
\series default
: Cloud computing technology allows on-the-fly, point-and-click customization
 and report generation for business users, so IT doesn’t spend significant
 time on such tasks.
\end_layout

\begin_layout Itemize

\series bold
SLA-driven
\series default
: The system is dynamically managed by service-level agreements that define
 policies such as how quickly responses to requests need to be delivered.
\end_layout

\begin_layout Itemize

\series bold
Multi-tenancy
\series default
: The system is built in a way that allows several customers to share infrastruc
ture with mutual opacity and without compromising privacy and security.
 
\end_layout

\begin_layout Itemize

\series bold
Service-oriented
\series default
: The system allows composing applications out of discrete, re-usable, loosely-c
oupled services.
 Changes to, or failure of, a service will not disrupt other services.
\end_layout

\begin_layout Itemize

\series bold
Virtualized
\series default
: Applications are decoupled from the underlying hardware.
 An application may rely on Grid Computing and multiple applications could
 run on a single computer.
\end_layout

\begin_layout Itemize

\series bold
Data, Data, Data
\series default
: The key to many of the above desirable characteristics is management of
 data: its distribution, partitioning, security and synchronization using
 technologies like Amazon’s SimpleDB (large-scale relational databases)
 and in-memory data grids.
 According to premier Cloud Computing vendor, Salesforce.com, given a properly-im
plemented Cloud Computing solution, a client should experience some or all
 of the following benefits: 
\end_layout

\begin_layout Itemize

\series bold
Proven Web-services integration
\series default
: Cloud Computing technology is much easier and quicker to integrate with
 other enterprise applications.
 
\end_layout

\begin_layout Itemize

\series bold
Support for deep customizations
\series default
: The Cloud Computing infrastructure not only allows deep customization
 and application configuration, it preserves all those customizations even
 during upgrades and with evolving needs, thus freeing up organizational
 IT resources.
\end_layout

\begin_layout Itemize

\series bold
Pre-built, pre-integrated apps
\series default
: Hundreds of pre-built applications and application exchange capabilities
 are either pre-integrated into larger, off-the-shelf applications or available
 for quick integration to form new applications.
 
\end_layout

\begin_layout Itemize

\series bold
Security
\series default
 can improve due to centralization of data.
\end_layout

\begin_layout Subsection
Cloud Computing's obstacles
\end_layout

\begin_layout Standard

\color brown
TODO: statistics more recent
\end_layout

\begin_layout Standard
There are many disadvantages of Cloud Computing.The document
\begin_inset CommandInset citation
LatexCommand cite
key "4"
literal "false"

\end_inset

list many disadvantages:
\end_layout

\begin_layout Paragraph
Cloud Vulnerability
\end_layout

\begin_layout Standard
The primary challenge posed to data management in the cloud is content security.
 Due to the ease of access to content over the internet, concerns have been
 raised due to data vulnerability.
 In a review of cloud security issues, funded by IBM, 382 organisations
 disclosed cloud security issues in 2016 across 16 different industries.
 The security issues faced by cloud environments include; the mis-use of
 cloud content, malicious hacking, failure of vendor security and shared
 technology vulnerabilities.
 While improve cloud security is an area currently undergoing considerable
 research , and it was observed that the security of cloud content is vulnerable
 on several levels.
 On a "communications level" risk arises from the sharing of sensitive informati
on (e.g.
 access passwords).
 On a "security level" the cloud is vulnerable to password cracking, cookie
 poisoning and CAPTCHA breaking among other threats.
 Moreover, cloud content is subject to Service Level Agreements (SLAs) such
 as legal or confidentiality requirements which may compromise data security.
 Due to the multi-tiered vulnerability of cloud architecture, current innovation
s aiming to improve cloud security are unlikely to remove all levels of
 threat.
 
\end_layout

\begin_layout Paragraph
Technical Issues
\end_layout

\begin_layout Standard
Although Cloud Computing offers improved efficiency by means of “on demand”
 content access, the cloud can also be prone to technical malfunctions such
 as outages.
 Even the most established cloud vendors do encounter unexpected technical
 problems despite generally having high standards of maintenance.It is estimated
 that cloud services are unavailable for 7.5 hours per year (99.9% reliability).
 While, at a glance, this figure may seem impressive, it does not reach
 the expected reliability quotient of 99.999% for sensitive data management.
 
\end_layout

\begin_layout Paragraph
Cost Creep 
\end_layout

\begin_layout Standard
At first glance migrating to a “pay-as-you-go” pricing model as employed
 by many cloud providers may seem financially attractive.
 However, it has been well documented that organisations that migrate to
 a cloud environment are often charged with additional hidden usage charges.
 Additional usage charge can accumulate to be a deterrent to cloud adoption,
 particularly for smaller enterprises.
 
\end_layout

\begin_layout Paragraph
Financial Risk in Disaster Scenarios
\end_layout

\begin_layout Standard
Cloud users can incur significant costs in cases of cloud outage, security
 breach or vendor lock-in (see below).
 According to the Penomen Institute, for example, in 2016, the average distribut
ed cost incurred by a data centre outage was almost $750, 000.
 In the same year data breaches, depending on their nature, are estimated
 to have cost between around 130$ and 170$ to resolve per record.
 The cost in these scenarios may fall on either the cloud utiliser or the
 cloud vendor, depending on the pre-defined contract between the two parties.
 
\end_layout

\begin_layout Paragraph
Vendor Lock-In
\end_layout

\begin_layout Standard
Vendor lock-in problem in cloud computing is characterized by expensive
 and time-consuming migration of application and data to alternative providers.
 Cloud software vendors lock in customers in several ways:
\end_layout

\begin_layout Itemize
by designing a system incompatible with software developed by other vendors
\end_layout

\begin_layout Itemize
by using proprietary standards or closed architectures that lack interoperabilit
y with other applications
\end_layout

\begin_layout Itemize
by licensing the software under exclusive conditions.
\end_layout

\begin_layout Subsection
Conclusion
\end_layout

\begin_layout Standard
In this chapter we have presented the Cloud Computing,its characteristics
 which its distinguished from other computing model, then have listed the
 most common used services models IaaS, PaaS and SaaS.Also, we have presented
 several deployment models.
 Finally, benefits and obstacles of this computing model was listed.
\end_layout

\begin_layout Standard
Cloud computing provides virtualized cloud resources as a service, on-demand,
 and pay-per-use basis.
 The characteristics of cloud computing such as elasticity and flexibility
 make this environment a major trend for computation and storage services.
 These characteristics motivate to execution of scientific applications
 in the cloud environment
\begin_inset CommandInset citation
LatexCommand cite
key "garg2022energy"
literal "false"

\end_inset

.This is why we will present in the next chapter scheduling scientific workflow.
\end_layout

\begin_layout Standard

\color brown
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section

\color brown
The problem of scheduling the scientific workflow on a cloud platform with
 optimisation of energy
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Standard
Large-scale complex scientific applications/workflow are executed and analyzed
 in the multi-disciplinary area of research such as astronomy and physics.
 The workflow contains a large number of mutually dependent tasks which
 are executed according to their dependency constraint.
 Due to dependency constraint, the child task can start its execution only
 when parent task finishes its execution.
 A directed acyclic graph (DAG) is used to represent workflows.
 These workflows often have disparate requirements (such as storage and
 CPU) and constraints (dependency) that need to be accounted during their
 execution
\begin_inset CommandInset citation
LatexCommand cite
key "garg2022energy"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
In cloud environment, effective management of scientific workflows is the
 main challenge since there are numerous virtual machines and many user
 tasks that should be scheduled by considering dependencies and various
 objectives
\begin_inset CommandInset citation
LatexCommand cite
key "cloud_computing_simulators"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
In this chapter, we will introduce the scientific workflow schudeling problem,
 firstly, we modelize it, then we list some related works that optimize
 the energy consumption and we finish this chapter with comparative table.
\end_layout

\begin_layout Subsection

\color brown
Introduction
\end_layout

\begin_layout Standard

\color brown
The cloud is increasingly recognized as a new way to use compute, storage
 and network services seamlessly and efficiently on demand.
 It presents a promising technology that facilitates the execution of scientific
 and commercial applications.
 It provides flexible and scalable services, as users demand, through a
 pay-as-you-go model.These applications are often expressed in the form of
 scientific workflows comprising a series of linked processing steps (tasks).
 Recently, the cloud provides them, on demand, with these infrastructures
 with different levels of QoS.
 The scheduling of tasks and mainly of workflow is an NP-complete problem
 that can be solved by metaheuristics.
 Due to the importance of workflow applications, several research projects
 have been conducted to design workflow management systems and appropriate
 scheduling algorithms.
 (prise de document de touhami le 20/03/2023)
\end_layout

\begin_layout Subsubsection

\color brown
Définitions et concepts
\end_layout

\begin_layout Subsection

\color brown
L'ordonnanceur et l'ordonnancement du workflow
\end_layout

\begin_layout Subsubsection

\color brown
Définition de l'ordonnanceur
\end_layout

\begin_layout Subsubsection

\color brown
Définition de l'ordonnancement
\end_layout

\begin_layout Subsubsection

\color brown
Types d'ordonnancement
\end_layout

\begin_layout Subsubsection

\color brown
L'ordonnancement du workflow
\end_layout

\begin_layout Subsubsection

\color brown
Objectifs de l'ordonnancement du workflow
\end_layout

\begin_layout Subsubsection

\color brown
Les techiniques de l'ordonnancement du workflow
\end_layout

\begin_layout Subsubsection

\color brown
Catégories d'algorithmes d'ordonnancement existants
\end_layout

\begin_layout Subsubsection

\color brown
Critère de planification dans le Cloud Computing
\end_layout

\begin_layout Subsection

\color brown
Modélisation du problème
\end_layout

\begin_layout Subsubsection
Workflow modelisation
\end_layout

\begin_layout Standard
In the workflow scheduling problem, applications are defined by the directed
 acyclicgraphs (DAGs).
 A workflow includes a set of interdependent tasks that are bounded together
 through data or functional dependencies
\begin_inset CommandInset citation
LatexCommand cite
key "cloud_computing_simulators"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
We consider a workflow W as a graph G = (T, D) , where T = { T , T ,…, T
 } indicates n tasksand shows the data flow dependencies among them.
 The dataflow dependency ( T
\begin_inset Formula $_{i}$
\end_inset

 , T
\begin_inset Formula $_{j}$
\end_inset

 ) means that task T
\begin_inset Formula $_{i}$
\end_inset

 is an immediate predecessor of task T
\begin_inset Formula $_{j}$
\end_inset

 and task Tj is an immediate successor of task T
\begin_inset Formula $_{i}$
\end_inset

.
 In some cases, there are several predecessors and successors and so Pr(T
\begin_inset Formula $_{i}$
\end_inset

) and Su(T
\begin_inset Formula $_{i}$
\end_inset

) are defined to indicate the set ofimmediate predecessors and successors
 for task T
\begin_inset Formula $_{i}$
\end_inset

.
\begin_inset CommandInset citation
LatexCommand cite
key "cloud_computing_simulators"
literal "false"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Pr(T_{i})=\left\{ Tj|\left(T_{j},T_{i}\right)\epsilon D\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
Su(T_{i})=\left\{ Tj|\left(T_{i},T_{j}\right)\epsilon D\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
T
\begin_inset Formula $_{entry}$
\end_inset

 and T
\begin_inset Formula $_{exit}$
\end_inset

 are a task without any predecessors and a task without any successors,respectiv
ely.
\end_layout

\begin_layout Subsection

\color brown
Related works
\end_layout

\begin_layout Subsubsection
Energy optimization problem
\end_layout

\begin_layout Standard
Scientific workflows are the constitution of distinct tasks with complex
 dependency.
 Resource provisioning and the order in which workflow tasks are executed
 are challenging problems.
 The inefficient utilization of resources while executing the workflows
 wastes a tremendous number of resources.
 The inefficient utilization of resources increases the number of unused
 provisioned resources.
 These unused resources increase energy consumption without performing any
 useful operation.
 The resource utilization can be increased by efficient resource provisioning.
 An energy efficient scheduling algorithm can be used to manage the resources
 that are required by the task while executing these scientific workflow
 tasks.
 In the literature, numerous workflow scheduling algorithms have been proposed.
 These scheduling algorithms focus on diminishing makespan and cost with
 inadequate resources.
 The selection and designing of a competent and operative workflow scheduling
 algorithm are also challenging tasks.
 The energy-aware scheduling algorithm must be selected which can provision
 a proper resource from the offered resources which are efficient enough
 to complete the workflow tasks within their deadline constriction, and
 it can decrease the energy consumption
\begin_inset CommandInset citation
LatexCommand cite
key "garg2022energy"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection

\color brown
Optimisation difficile
\end_layout

\begin_layout Subsubsection

\color brown
Algorithmes d'optimisation approchées
\end_layout

\begin_layout Subsubsection

\color brown
Comparaison entre les approches d'ordonnancement des workflows
\end_layout

\begin_layout Subsection

\color brown
Conclusion
\end_layout

\begin_layout Standard

\color brown
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section

\color brown
Etat de l'art et approche proposée
\end_layout

\begin_layout Subsection

\color brown
Introduction
\end_layout

\begin_layout Subsection

\color brown
Algorithme étudié
\end_layout

\begin_layout Subsection

\color brown
Algorithme de ...
\end_layout

\begin_layout Subsection

\color brown
Approche proposée
\end_layout

\begin_layout Subsubsection

\color brown
Objectif du travail
\end_layout

\begin_layout Subsubsection

\color brown
Principe de algorithm
\end_layout

\begin_layout Subsubsection

\color brown
Description de l'approche
\end_layout

\begin_layout Subsubsection

\color brown
Les étapes de l'approche
\end_layout

\begin_layout Subsubsection

\color brown
Diagramme de l'approche proposée
\end_layout

\begin_layout Subsection

\color brown
Conclusion
\end_layout

\begin_layout Standard

\color brown
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section

\color brown
Implémentation, simulation et déscussion des résultats
\end_layout

\begin_layout Subsection

\color brown
Introduction
\end_layout

\begin_layout Subsection
Simulation tool: WorkflowSim
\end_layout

\begin_layout Standard
Over the past few years, cloud computing has gained tremendous popularity
 since itpresents a flexible and efficient solution for many services by
 Internet .
 Cloud is a large and complex system since it is composed of several users,
 service providers,physical machines, service broker, task scheduling algorithms
 , bandwidth, internetlatency, and storage technology etc.
 On the other hands, all cloud-base dimplementations need various configurations.
 Therefore, it is very difficult for researchers to evaluate the performance
 of their policies in a real cloud environment
\begin_inset CommandInset citation
LatexCommand cite
key "cloud_computing_simulators"
literal "false"

\end_inset

.
\end_layout

\begin_layout Standard
As a result, the simulator can play an important role in reducing cost,
 efficiency,infrastructure complexity, and security risks before a solution
 can be deployed on realinfrastructure.
 By focusing on issues related to the quality of a particular componentunder
 various scenarios, cloud simulators enable performance analysts to monitor
 the behaviors of the system
\begin_inset CommandInset citation
LatexCommand cite
key "cloud_computing_simulators"
literal "false"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Description and main features
\end_layout

\begin_layout Standard
WorkflowSim was introduced for modeling Scientific Workflows in cloud environmen
t.
 Workflows in heterogeneous distributed systems show different levels of
 overheads that are explained based on computational operations and miscellaneou
s works.
\end_layout

\begin_layout Standard
Most of simulators such as CloudSim do not consider fine granularity simulations
 of workflows and task clustering.
 Task clustering reduces the number of jobs to be executed and so execution
 overhead is decreased.
\end_layout

\begin_layout Standard
Generally, a job may have high risk for suffering from failures since it
 consists of several tasks.
 Researchers with WorkflowSim can study the impact of job failures runtime
 performance of workflows for different clustering methods.
\begin_inset CommandInset citation
LatexCommand cite
key "cloud_computing_simulators"
literal "false"

\end_inset


\end_layout

\begin_layout Subsubsection
Architecture
\end_layout

\begin_layout Standard
Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:WorkflowSim's-Architecture"
plural "false"
caps "false"
noprefix "false"

\end_inset

shows the structure of WorkflowSim that is composed of several components:
\end_layout

\begin_layout Enumerate
Workflow Mapper that maps abstract workflows to concrete workflows
\end_layout

\begin_layout Enumerate
Workflow Engine that controls the data dependencies
\end_layout

\begin_layout Enumerate
Workflow Scheduler assigns jobs to resources
\end_layout

\begin_layout Enumerate
Clustering Engine that groups small tasks into a large job
\end_layout

\begin_layout Enumerate
Failure Generator that injects task failures for each execution site
\end_layout

\begin_layout Enumerate
Failure Monitor that stores the failure information such as resource id
 and task id.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/workflowSim_architecture.jpg

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:WorkflowSim's-Architecture"

\end_inset

WorkflowSim's Architecture 
\begin_inset CommandInset citation
LatexCommand cite
key "cloud_computing_simulators"
literal "false"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Downloading and Installing WorkflowSim with Eclipse
\end_layout

\begin_layout Standard
To make the first WorkflowSim project, follow this steps
\begin_inset CommandInset citation
LatexCommand cite
key "GitHub_WorkflowSim_repo"
literal "false"

\end_inset

:
\end_layout

\begin_layout Enumerate

\series bold
Register a GitHub account and fork WorkflowSim branch:
\end_layout

\begin_deeper
\begin_layout Enumerate
Go to the repository page (https://github.com/WorkflowSim/WorkflowSim-1.0)
\end_layout

\begin_layout Enumerate
Click 'Fork' on the top-right corner next to 'Star'.
 
\end_layout

\begin_layout Enumerate
Then you will have your own branch of WorkflowSim and you can maintain your
 codes under this branch and commit your changes to it.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Check out your source codes:
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
create a new java project called 'WorkflowSim' (it doesn't have to be 'WorkflowS
im').
\end_layout

\begin_layout Enumerate
Right click your project, choose 'Import'.
 Click 'Git'->'Projects from Git'.
\end_layout

\begin_layout Enumerate
Set the URL to be your reposotory.
 And then you will see a branch called 'master', tick it and continue.
 And you don't need import projects again so just cancel.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Import Source Files and Libraries:
\series default
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Right click the project again and choose 'Properties'.
 
\end_layout

\begin_layout Enumerate
Go to 'Java Build Path'.
 
\end_layout

\begin_layout Enumerate
Link two source directories (your_repo_root/examples, your_repo_root/sources)to
 the source folders.
 
\end_layout

\begin_layout Enumerate
Add two external Jars (your_repo_root/lib/flanagan.jar and your_repo_root/lib/jdo
m-2.0.0.jar) to the Libraries.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Run an Example:
\series default
 Run an example i.e., org.workflowsim.examples.WorkflowSimBasicExample1.java.
\end_layout

\begin_deeper
\begin_layout Enumerate
Open WorkflowSimBasicExample1.java
\end_layout

\begin_layout Enumerate
replace the String daxPath = "/Users/chenweiwei/Work/WorkflowSim-1.0/config/dax/M
ontage_100.xml"; with your real physical file path.
\end_layout

\begin_layout Enumerate
Right click on WorkflowSimBasicExample1.java and choose 'Run File'.
 You should be able to see some output
\end_layout

\end_deeper
\begin_layout Subsubsection
Strengths
\end_layout

\begin_layout Standard
WorkflowSim has many advantages
\begin_inset CommandInset citation
LatexCommand cite
key "cloud_computing_simulators"
literal "false"

\end_inset

 which are:
\end_layout

\begin_layout Enumerate
It supports a stack of workflow parser and workflow engine delay to workflow
 optimization techniques with better accuracy are implemented.
\end_layout

\begin_layout Enumerate
It implements several workflow-scheduling methods such as HEFT, Min-Min,
 and Max-Min and so developers can compare their algorithms with them in
 a simple way.
\end_layout

\begin_layout Enumerate
It considers task clustering and layered overhead to the workflow simulation.
 Therefore, developers can test various strategies based on a real trace
 of overheads.
\end_layout

\begin_layout Enumerate
It models failures for two layers (i.e., task/job) by an interface and hence
 developers can design fault-tolerant techniques.
\end_layout

\begin_layout Subsubsection
Limitations
\end_layout

\begin_layout Standard
WorkflowSim has some limitations 
\begin_inset CommandInset citation
LatexCommand cite
key "cloud_computing_simulators"
literal "false"

\end_inset

 such as:
\end_layout

\begin_layout Enumerate
It includes limited types of failures.
 Therefore, developers cannot simulate the situation when a task is not
 successfully sent due to network problems or workflow scheduler issues.
\end_layout

\begin_layout Enumerate
It does not consider the performance characteristic of file I/O.
 Therefore, developers cannot obtain suitable simulation for data-intensive
 applications since these applications involve reading or writing huge data
 files.
\end_layout

\begin_layout Enumerate
It supports only simple workflow techniques and so developers cannot use
 other important approaches like workflow partitioning in their implementations.
\end_layout

\begin_layout Subsection

\color brown
Paramètre de simulations
\end_layout

\begin_layout Subsection

\color brown
Expérimentation
\end_layout

\begin_layout Subsection

\color brown
Comparaison et discussion de la solution
\end_layout

\begin_layout Subsection

\color brown
Conclusion
\end_layout

\begin_layout Standard

\color brown
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section

\color brown
General conclusion
\end_layout

\begin_layout Paragraph

\color brown
Discussion
\end_layout

\begin_layout Paragraph

\color brown
Limites
\end_layout

\begin_layout Paragraph

\color brown
Perspectives
\end_layout

\begin_layout Standard

\color brown
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "bibleographie"
options "bibtotoc,plain"

\end_inset


\end_layout

\end_body
\end_document
